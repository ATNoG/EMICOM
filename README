Project : Odtone - Open Dot Twenty One
Version : 0.1.1 Beta
URL     : http://helios.av.it.pt/projects/odtone
Boost   : 1.42


Download
--------

You can download the latest version of Odtone from the following
website:

	http://helios.av.it.pt/projects/odtone

Alternatively, you can check out the latest version from the Odtone
Git repository:

	git	clone http://helios.av.it.pt/projects/odtone/git/ odtone


Compilation
-----------

The Boost library is required to compile Odtone, more details are provided
below. Before compiling Odtone you must configure the Boost library in your
user-config.jam, see the 'doc/user-config.jam' for details.

Once the Boost library is properly configured, run 'bjam' to compile odtone.

Consult the Boost.Build documentation for more details!


Boost Library Quick Guide
-------------------------

1. Download the Boost library from http://www.boost.org/users/download/ and
unpack it. See above for the required version of the Boost library.

2. Install Boost.Jam (if your already have it, skip this step). You can either
use the bootstrap script from the Boost library sources and then copy the
resulting binary to a proper place (within your $PATH). Or, you can download a
pre-built binary from http://www.boost.org/users/download/.

3. Setup Boost.Build (if your already have it, skip this step). See the file
'doc/boost-build.jam' for instructions.


Platform Notes
--------------

          -------------------------
          | x86-32 | x86-64 | ARM |
-----------------------------------
| Linux   |   OK   |   OK   | OK  |
| Windows |   OK   |   OK   |  ?  |
-----------------------------------

Linux
 - We recommend GCC. Most distributions already come with the necessary
 pre-requisites, you may aditionally need to install g++.

Windows
 - We recommend MSVC. You will need to download and install the latest Windows
 SDK. This already comes with all pre-requesite libraries and toolchains.

Android
 - Current Android Bionic headers are still too buggy to compile Odtone. For
 example, the boost::asio::ip headers does no compile because of buggy
 <netinet/in.h> and <netinet/in6.h> headers.
 However, since Android is based on linux, it is possible to compile Odtone
 with the CodeSourcery GNU Toolchain for ARM Processors, at the expense of a
 bigger binary, since we have to link all libraries staticaly. The target must
 be arm-none-linux-gnueabi.
 - Prebuild binaries are available at http://www.codesourcery.com/sgpp/lite/arm
 - See 'doc/user-config.jam' on how to configure the toolchain to compile with
 Boost.Build. To use the Android toolset, pass the command line option
 'toolset=gcc-android' to bjam.
 - The Android SDK, not the NDK, is required to run the Odtone binary on a
 Android device or emulator.


For more details regarding platforms and toolchains, consult the Boost.Build
documentation!

