[/==============================================================================
 / Brief   : Dummyserver App Documentation
 / Authors : Carlos Guimaraes <cguimaraes@av.it.pt>
 /------------------------------------------------------------------------------
 / ODTONE - Open Dot Twenty One
 /
 / Copyright (C) 2009-2012 Universidade Aveiro
 / Copyright (C) 2009-2012 Instituto de Telecomunicações - Pólo Aveiro
 /
 / This software is distributed under a license. The full license
 / agreement can be found in the file LICENSE in this distribution.
 / This software may not be copied, modified, sold or distributed
 / other than expressed in the named license agreement.
 /
 / This software is distributed without any warranty.
 /=============================================================================]

[section:dummyserver_index Dummyserver]

The ['dummyserver] is a simple application that, as the name implies, works like
a dummy server. It is always listening (at port 4000) for incoming messages and
print them in the console.

This pretends to simulate either a MIHF or a MIH SAP.


[section:dummyserver_getStart Getting Started]

[section Extending]

It is possible to modify the behaviour of the dummyserver when it receives a new
message. To do it, the "`static void process_message(meta_message_ptr& msg)`"
function must be modified according to the desired behavior.

E.g.: Let's change the dummyserver behavior in order to send the received
message to a specific destination
(assuming that the mechanisms for sending messages have already been defined):

``
	static void process_message(meta_message_ptr& msg)
	{
		std::cout << "MIH message: Service=" << msg->sid()
			  << " Opcode=" << msg->opcode()
			  << " Action=" << msg->aid()
			  << std::endl;

		sap.send(msg);
	}
``

[endsect]

[section Running]

Just run dummyserver and wait for incoming messages!

[endsect]

[endsect]

[endsect]
