[article ODTONE
    [quickbook 1.5]
    [version 0.2]
    [authors [Guimarães, Carlos]]
    [copyright 2010 Universidade Aveiro]
    [copyright 2010 Instituto de Telecomunicações - Pólo Aveiro]
    [license
        This software is distributed under a license. The full license
		agreement can be found in the LICENSE in this distribution.
		This software may not be copied, modified, sold or distributed
		other than expressed in the named license agreement.

		This software is distributed without any warranty.
    ]
    [source-mode c++]
]

[section:cliente_index Index]
[endsect]

[section:cliente_overview 1. Overview]

The ['dummyserver] is a simple application that, as the name implies, works like
a dummy server. It is always listening (at port 4000) for incoming messages and
print them in the console.

This pretends to simulate either a MIHF or a MIH SAP.

[endsect]

[section:cliente_getStart 2. Getting Started]

[section Extending]

It is possible to modify the behaviour of the dummyserver when it receives a new
message. To do this, the "`static void process_message(meta_message_ptr& msg)`"
function must be modified.

E.g.:

Let's change the dummyserver to send the incomming message to specific destination
(assuming that the mechanisms for sending messages have already been defined):

``
	static void process_message(meta_message_ptr& msg)
	{
		std::cout << "MIH message: Service=" << msg->sid()
			  << " Opcode=" << msg->opcode()
			  << " Action=" << msg->aid()
			  << std::endl;

		sap.send(msg);
	}
``

[endsect]

[section Running]

Just run dummyserver and wait for incoming messages!

[endsect]



[endsect]
